company -Ascendion

1.introduction
2.tell me aws services you have used
3.in route53 what is the use of hosted zone and record set
4.difference b/w A record and quad A
5.in ec2 instance what is the meaning of instance metadata and userdata and how you going to access them and where you find it 
  and modify it(someone have given that) you joined lately and   you have to modify it (where does aws stores this data)
6. write script in python or shell to tag ec2 instance if it's not tagged if it's tagged it has to skip it 
7. write script in python or shell given port number is open or not open
8. what is static pod and who maintains
9. difference b/w secreat and configmap - can we pass secret in configmap 
10. different types of probes
11. what is you understanding on various devops matrix
12. have you worked on platform as service


Ascendion: Detailed Responses
1. Introduction
I am a DevOps professional with experience in managing and optimizing cloud infrastructure, particularly on AWS. I have extensive experience with Kubernetes, CI/CD pipelines, and various monitoring tools. I currently work at Ascendion, where I manage multiple clusters and ensure seamless deployment and operations.

2. AWS Services Used
Compute: EC2, Lambda, ECS, EKS
Storage: S3, EBS, EFS
Database: RDS, DynamoDB
Networking: VPC, Route 53, CloudFront, ELB/ALB
Security: IAM, KMS, CloudTrail
Management Tools: CloudFormation, CloudWatch, AWS Config
Developer Tools: CodePipeline, CodeBuild, CodeDeploy
3. Route 53: Hosted Zone and Record Set
Hosted Zone: A container for DNS records for a specific domain.
Record Set: Contains information about how you want to route traffic for a specific domain or subdomain.
4. Difference between A Record and Quad A
A Record: Maps a domain name to an IPv4 address.
Quad A (AAAA) Record: Maps a domain name to an IPv6 address.
5. EC2 Instance Metadata and User Data
Instance Metadata: Information about your instance that you can use to configure or manage the running instance. Accessible via http://169.254.169.254/latest/meta-data/.
User Data: Data that is supplied by the user at the time of instance launch. It can be used to perform common automated configuration tasks. Accessible via http://169.254.169.254/latest/user-data/.
Modification:

User data can be modified by stopping the instance, modifying the user data via the EC2 console or CLI, and then restarting the instance.
6. Script to Tag EC2 Instance if Not Tagged
Python (using Boto3):

python
Copy code
import boto3

ec2 = boto3.client('ec2')

def tag_instance(instance_id, tags):
    instance = ec2.describe_instances(InstanceIds=[instance_id])
    if not instance['Reservations'][0]['Instances'][0].get('Tags'):
        ec2.create_tags(Resources=[instance_id], Tags=tags)

instance_id = 'i-0abcd1234efgh5678'
tags = [{'Key': 'Name', 'Value': 'MyInstance'}]
tag_instance(instance_id, tags)
Shell:

sh
Copy code
INSTANCE_ID="i-0abcd1234efgh5678"
TAGS="Key=Name,Value=MyInstance"
EXISTING_TAGS=$(aws ec2 describe-tags --filters "Name=resource-id,Values=$INSTANCE_ID" --query 'Tags')

if [ -z "$EXISTING_TAGS" ]; then
  aws ec2 create-tags --resources $INSTANCE_ID --tags $TAGS
fi
7. Script to Check if Port is Open
Python:

python
Copy code
import socket

def is_port_open(host, port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    result = sock.connect_ex((host, port))
    sock.close()
    return result == 0

host = '127.0.0.1'
port = 80
print(f"Port {port} is {'open' if is_port_open(host, port) else 'closed'}")
Shell:

sh
Copy code
HOST="127.0.0.1"
PORT=80
nc -zv $HOST $PORT && echo "Port $PORT is open" || echo "Port $PORT is closed"
8. Static Pod
Static Pod: Managed directly by the kubelet daemon on a specific node, without being created by the API server. They are defined by static pod manifests placed in the kubelet's manifest directory.
9. Secret vs ConfigMap
Secret: Used to store sensitive data such as passwords, OAuth tokens, and SSH keys.
ConfigMap: Used to store non-confidential data in key-value pairs.
Passing Secret in ConfigMap:

Directly, you can't pass secrets in a ConfigMap because ConfigMaps are not intended for sensitive data. Instead, use secrets directly.
10. Different Types of Probes
Liveness Probe: Determines if a container is running. If the liveness probe fails, the container is killed and restarted.
Readiness Probe: Determines if a container is ready to start accepting traffic.
Startup Probe: Used to check if the application within the container has started.
11. Understanding Various DevOps Metrics
Deployment Frequency: How often deployments occur.
Change Lead Time: Time taken from code commit to deployment.
Mean Time to Recovery (MTTR): Time taken to recover from a failure.
Change Failure Rate: Percentage of changes that result in failures.
12. Platform as a Service (PaaS)
Provides a platform allowing customers to develop, run, and manage applications without dealing with the infrastructure. Examples include AWS Elastic Beanstalk, Google App Engine, and Heroku.
Would you like more details on any specific point?






